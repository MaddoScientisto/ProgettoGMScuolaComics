<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>HudSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    // Initialise your object here
    uiTextStartX = 0;
    uiTextStartY = -2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    // This is called once every frame
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    // Draw to the screen here
    //draw_self();
    draw_sprite_ext(HudSprite,0,0,0,1,1,0,c_white,0.8);
    //draw_sprite(HudBackground,0,0,0);
    if debug_mode
    {
        draw_text(64, 0, "FPS = " + string(fps));
        draw_text(64, 8, "FPS (REAL) = " + string(fps_real));
        draw_text_colour(0,32, "VSPEED: " + string(Player.VerticalSpeed), c_white, c_white, c_white, c_white, 1);
        draw_text(0,40, "InvTimer: " + string(Player.InvulnerabilityTimer));
        //draw_text(64, 0, "GameManagers = " + string(instance_number(GameManager)));
    }
    
    draw_text(uiTextStartX,uiTextStartY,"Pos: " + string(GameManager.MapX) + ", " + string(GameManager.MapY));
    if (Player.HasHighJump)
    {
        draw_sprite(spr_highJumpBoots,0,144,0);
    }
    
    if (Player.GunLevel &gt;= 1)
    {
        draw_sprite(spr_gun,0,144-16,0);
    }
    
//    draw_text(0,8,"Health: " + string(Player.Health));
    draw_text(uiTextStartX,uiTextStartY+8,"Health:");
    for (var i = 0; i &lt; Player.MaxHealth; i++)
    {
        draw_sprite(spr_healthBarEmpty,0,uiTextStartX+32+(2*i),uiTextStartY+9);
    }
    
    for (var i = 0; i &lt; Player.Health; i++)
    {
        draw_sprite(spr_healthBar,0,uiTextStartX+32+(2*i),uiTextStartY+9);
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
